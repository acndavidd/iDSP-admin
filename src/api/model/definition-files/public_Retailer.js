/*jslint node: true */
"use strict";
/*------------------------------------------------------------------------------------

DO NOT EDIT THIS FILE !!! It is generated automatically and will be overwritten.

To modify this model:
1. Create 'Retailer.js' file in 'definition-files-custom' directory located in this file's parent directory.
2. Copy the code below and paste it into 'Retailer.js'.
3. Use utility methods to easily access orm properties.

"use strict";
var orm     = require('model\index.js'),
    model   = require('./Retailer.js'),
    util    = require('../utils.js')(model),
    Seq     = orm.Sequelize();

module.exports = model;

// Some utility methods:
util.getRelation("fKs").onDelete = 'CASCADE'; 
util.getAttribute("retailerID").comment = 'This is the comment'; 

------------------------------------------------------------------------------------*/
var orm = require('../index.js'),
    Seq = orm.Sequelize();
module.exports = {
    modelName: "public.retailer",
    options: {
        tableName: "Retailer",
        schema: "public",
        timestamps: false
    },
    attributes: {
        "retailerID": {
            type: Seq.INTEGER,
            field: "retailerID",
            primaryKey: true,
            autoIncrement: true,
            allowNull: false,
            unique: "Retailer_PK"
        },
        "storeName": {
            type: Seq.STRING(50),
            field: "storeName"
        },
        "ownerName": {
            type: Seq.STRING(30),
            field: "ownerName"
        },
        "serviceNumber": {
            type: Seq.DECIMAL(14),
            field: "serviceNumber"
        },
        "storeAddress": {
            type: Seq.STRING(50),
            field: "storeAddress"
        },
        "civilStatus": {
            type: Seq.STRING(20),
            field: "civilStatus"
        },
        "email": {
            type: Seq.STRING(50),
            field: "email"
        },
        "gender": {
            type: Seq.CHAR(2),
            field: "gender"
        },
        "birthday": {
            type: Seq.DATEONLY,
            field: "birthday"
        },
        "disLastVisit": {
            type: Seq.DATEONLY,
            field: "disLastVisit"
        },
        "created": {
            type: Seq.DATEONLY,
            field: "created"
        },
        "createdBy": {
            type: Seq.STRING(30),
            field: "createdBy"
        },
        "updated": {
            type: Seq.DATEONLY,
            field: "updated"
        },
        "updatedBy": {
            type: Seq.STRING(30),
            field: "updatedBy"
        }
    },
    relations: [{
        type: "hasMany",
        model: "public.collection",
        schema: "public",
        table: "collection",
        source: "generator",
        details: {
            as: "fKs",
            foreignKey: "retailerID",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "hasMany",
        model: "public.retailerRoute",
        schema: "public",
        table: "RetailerRoute",
        source: "generator",
        details: {
            as: "routeFKs",
            foreignKey: "retailerID",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }]
};