/*jslint node: true */
"use strict";
/*------------------------------------------------------------------------------------

DO NOT EDIT THIS FILE !!! It is generated automatically and will be overwritten.

To modify this model:
1. Create 'User.js' file in 'definition-files-custom' directory located in this file's parent directory.
2. Copy the code below and paste it into 'User.js'.
3. Use utility methods to easily access orm properties.

"use strict";
var orm     = require('model\index.js'),
    model   = require('./User.js'),
    util    = require('../utils.js')(model),
    Seq     = orm.Sequelize();

module.exports = model;

// Some utility methods:
util.getRelation("createdByFkeys").onDelete = 'CASCADE'; 
util.getAttribute("userID").comment = 'This is the comment'; 

------------------------------------------------------------------------------------*/
var orm = require('../index.js'),
    Seq = orm.Sequelize();
module.exports = {
    modelName: "public.user",
    options: {
        tableName: "User",
        schema: "public",
        timestamps: false
    },
    attributes: {
        "userID": {
            type: Seq.INTEGER,
            field: "userID",
            primaryKey: true,
            allowNull: false,
            unique: "User_pkey"
        },
        "password": {
            type: Seq.STRING(200),
            field: "password"
        },
        "roleId": {
            type: Seq.INTEGER,
            field: "roleId",
            references: "public.role",
            referencesKey: "roleId"
        },
        "created": {
            type: Seq.TIME,
            field: "created"
        },
        "createdBy": {
            type: Seq.INTEGER,
            field: "createdBy",
            references: "public.user",
            referencesKey: "createdBy"
        },
        "updated": {
            type: Seq.DATE,
            field: "updated"
        },
        "updatedBy": {
            type: Seq.INTEGER,
            field: "updatedBy",
            references: "public.user",
            referencesKey: "updatedBy"
        },
        "status": {
            type: Seq.CHAR(1),
            field: "status"
        }
    },
    relations: [{
        type: "hasMany",
        model: "public.user",
        schema: "public",
        table: "User",
        source: "generator",
        details: {
            as: "createdByFkeys",
            foreignKey: "createdBy",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "hasMany",
        model: "public.user",
        schema: "public",
        table: "User",
        source: "generator",
        details: {
            as: "updatedByFkeys",
            foreignKey: "updatedBy",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "belongsTo",
        model: "public.user",
        schema: "public",
        table: "User",
        source: "generator",
        details: {
            as: "relatedCreatedBy",
            foreignKey: "createdBy",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "belongsTo",
        model: "public.role",
        schema: "public",
        table: "Role",
        source: "generator",
        details: {
            as: "relatedRoleId",
            foreignKey: "roleId",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "belongsTo",
        model: "public.user",
        schema: "public",
        table: "User",
        source: "generator",
        details: {
            as: "relatedUpdatedBy",
            foreignKey: "updatedBy",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "belongsToMany",
        model: "public.role",
        schema: "public",
        table: "Role",
        source: "generator",
        details: {
            as: "relatedCreatedByFkeyRoleIds",
            foreignKey: "createdBy",
            otherKey: "roleId",
            through: "User",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "belongsToMany",
        model: "public.user",
        schema: "public",
        table: "User",
        source: "generator",
        details: {
            as: "relatedCreatedByFkeyUpdatedBies",
            foreignKey: "createdBy",
            otherKey: "updatedBy",
            through: "User",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "belongsToMany",
        model: "public.user",
        schema: "public",
        table: "User",
        source: "generator",
        details: {
            as: "relatedUpdatedByFkeyCreatedBies",
            foreignKey: "updatedBy",
            otherKey: "createdBy",
            through: "User",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "belongsToMany",
        model: "public.role",
        schema: "public",
        table: "Role",
        source: "generator",
        details: {
            as: "relatedUpdatedByFkeyRoleIds",
            foreignKey: "updatedBy",
            otherKey: "roleId",
            through: "User",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }]
};